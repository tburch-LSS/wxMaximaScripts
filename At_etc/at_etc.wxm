/* [wxMaxima batch file version 1] [ DO NOT EDIT BY HAND! ]*/
/* [ Created with wxMaxima version 20.12.1 ] */
/* [wxMaxima: comment start ]
Note that, for multiplcation and addition, the distributive property can be "revealed" through natural logarithms:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
add(a,b) := log(exp(a)*exp(b));
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
add(a,b);
add(c*a,c*b);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
ratsimp(%);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Placing the multiplication between the exponentials in the logarithm, we arrive at the relation (addition) over which it is disributive. We can try the same with + between the exp's...

Define the @ (or "down") relation such that addition is distributive over it: a + (b @ c) = (a+b) @ (a+c)...
Or: a + down(b,c) = down(a+b,a+c). Trying the following ansatz:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
at_eq : At(a,b) = log(exp(a) + exp(b));
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
down(a,b) := radcan( log(exp(a) + exp(b)) );
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Check:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
down(a+b,a+c);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
yes!
This should work with any base for the power / log's:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
 radcan( log(10^(a+b) + 10^(a+c)) );
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
yep!

some values:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
down(0,0);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
down(1,0);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
down(x,0);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
down(x,x);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Associative:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
down(a,down(b,c));
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
diff(down(a,b),a);
diff(down(a,b),b);
diff(diff(down(a,b),b),a);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Let's have a look:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
wxplot2d ([down(x,x),down(x,x+3),down(x,2*x),down(x,2*x+3),down(x,3*x),down(x,3*x+3)], [x, -2, 2])$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
wxplot3d (down(x,y), [x, -5, 5], [y, -5, 5])$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Comparing x+y with down(x,y) :
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
wxplot3d ((x+y)/down(x,y), [x, -5, 5], [y, -5, 5])$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
wxplot3d ((x+y)/down(x,y), [x, -0.5, 5], [y, -0.5, 5])$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
wxplot2d ([2*x/down(x,x), 3*x/down(x,2*x)], [x, -5, 5], [y, -20, 20])$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Heading further "down", define "three dots" (therefore), or down2, such that: a @ down2(b,c) = down2(a@b,a@c) ...
Or:  down(a,down2(b,c)) = down2(down(a,b),down(a,c)) ...
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
td_eq : Td(a,b) = log( down(exp(a),exp(b)) );
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
down2(a,b) := radcan( log( down(exp(a),exp(b)) ) );
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
down2(down(a,b),down(a,c));
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
yes!
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
down2(x,x);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
diff(down2(a,b),a);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Let's take a look...
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
wxplot2d ([down2(x,x),down2(x,x+1),down2(x,2*x),down2(x,3*x)], [x, -2, 2])$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
wxplot3d (down2(x,y), [x, -5, 5], [y, -5, 5])$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Comparing down(x,y) with down2(x,y) :
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
wxplot3d (down(x,y)/down2(x,y), [x, -5, 5], [y, -5, 5])$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
wxplot3d (down(x,y)/down2(x,y), [x, -0.5, 5], [y, -0.5, 5])$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
wxplot2d ([down(x,x)/down2(x,x), down(x,2*x)/down2(x,2*x)], [x, -5, 5], [y, -20, 20])$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Let's take a look in the "up" direction for an operation which is distrubutive over multiplication. Defining "star" (or "up"):  a * (b . c) = (a * b) . (a * c) ...
Or:  up(a,b.c) = up(a,b) . up(a,c) ...
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
str_eq : Str(a,b) = exp(log(a)*log(b));
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
up(a,b) := radcan( exp(log(a)*log(b)) );
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
up(a,b);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
up(a,b*c);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
up(a,b) * up(a,c);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
which is the same as the former. So, yes!
Check with "down"-like operation:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
log( up(exp(a),exp(b)) );
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
yes!

up(a,b) could also be expressed with b as the base:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
is( up(a,b) = b^log(a) );
is( up(a,b) = a^log(b) );
is( up(b,a) = a^log(b) );
is( up(a,b) = up(b,a) );
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
... although it seems maxima has trouble with that realization in the present form...?
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
diff(up(a,b),a);
diff(up(a,b),b);
diff(diff(up(a,b),a),b);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Let's take a look:
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
wxplot3d (up(x,y), [x, -5, 5], [y, -5, 5])$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
The singularity at the origin comes as no surprise. And for finite, real values, x and y should remain > 0.
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
wxplot3d (up(x,y), [x, 0.2, 5], [y, 0.2, 5])$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Compare with x.y :
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
wxplot3d (up(x,y)/(x*y), [x, 1, 10], [y, 1, 10])$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
And x.y with x+y :
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
wxplot3d (x*y/(x+y), [x, 0.2, 10], [y, 0.2, 10])$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Now to be distributive over "up": up2( a , up(b,c) ) = up( up2(a,b) , up2(a,c) ) ...
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
up2(a,b) := radcan( exp( up(log(a),log(b)) ) );
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
up2(a,up(b,c));
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
diff(up2(a,b),a);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
up2(x,x);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Taking a look...
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
wxplot3d (up2(x,y), [x, -5, 5], [y, -5, 5])$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Problems now at x or y = 1.
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
wxplot3d (up2(x,y), [x, 1.5, 5], [y, 1.5, 5])$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Comparing up2(x,y) with up(x,y) :
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
wxplot3d (up2(x,y)/up(x,y), [x, 1.5, 5], [y, 1.5, 5])$
/* [wxMaxima: input   end   ] */



/* Old versions of Maxima abort on loading files that end in a comment. */
"Created with wxMaxima 20.12.1"$
